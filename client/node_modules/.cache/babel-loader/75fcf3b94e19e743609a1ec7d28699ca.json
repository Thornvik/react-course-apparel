{"ast":null,"code":"import UserActionTypes from \"./user.types\";\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  //if state is undefined it will fallback to the value of initial state\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return { ...state,\n        //everything on the state\n        currentUser: action.payload,\n        //set the current user\n        error: null\n      };\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return { ...StaticRange,\n        currentUser: null,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n    //returns the old object / state\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/tthornvik/Documents/udemy/crwn-clothing/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","userReducer","state","action","type","SIGN_IN_SUCCESS","payload","error","SIGN_OUT_SUCCESS","StaticRange","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE;AADO,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACrD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,eAAe,CAACO,eAArB;AACE,aAAO,EACL,GAAGH,KADE;AACK;AACVF,QAAAA,WAAW,EAAEG,MAAM,CAACG,OAFf;AAEwB;AAC7BC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKT,eAAe,CAACU,gBAArB;AACE,aAAO,EACL,GAAGC,WADE;AAELT,QAAAA,WAAW,EAAE,IAFR;AAGLO,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKT,eAAe,CAACY,eAArB;AACA,SAAKZ,eAAe,CAACa,gBAArB;AACA,SAAKb,eAAe,CAACc,eAArB;AACE,aAAO,EACL,GAAGV,KADE;AAELK,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAFT,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAAc;AArBlB;AAuBD,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import UserActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n  currentUser: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  //if state is undefined it will fallback to the value of initial state\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state, //everything on the state\n        currentUser: action.payload, //set the current user\n        error: null,\n      };\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...StaticRange,\n        currentUser: null,\n        error: null,\n      };\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state; //returns the old object / state\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}